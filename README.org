#+STARTUP: showall

* Org-files-db                                                   :noexport_2:

[[https://www.gnu.org/licenses/gpl-3.0][https://img.shields.io/badge/License-GPL%20v3-blue.svg]]

The org-files-db package allows you to store data from Org files (headings, tags, properties, links) in a SQLite database. It supports the extraction of relevant information from specified directories or individual Org files.

Parsing Org files and inserting data into the database is done asynchronously, ensuring a non-blocking and responsive experience.

It detect changes in files periodically and updates the database automatically to keep your data synchronized. Changes made to Org files with Emacs are updated instantly.

-----

** Contents

- [[#installation][Installation]]
- [[#usage][Usage]]
- [[#customization][Customization]]
- [[#key-bindings][Key Bindings]]
- [[#sqlite-database-schema][SQLite Database Schema]]
- [[#changelog][Changelog]]
- [[#contributing][Contributing]]

** Installation
:PROPERTIES:
:CUSTOM_ID: installation
:END:

This package is hosted on Github. Use your favourite way to install like [[https://github.com/progfolio/elpaca][Elpaca]], [[https://github.com/radian-software/straight.el][Straight]], [[https://github.com/quelpa/quelpa][Quelpa]]. Starting with Emacs 29 ~package-vc-install~ may be used.

** Usage
:PROPERTIES:
:CUSTOM_ID: usage
:END:

<Usage description>

** Customization
:PROPERTIES:
:CUSTOM_ID: customization
:END:

*** Variables

Set the following variables to change the behaviour of the package:

| Variable | Default | Description |
|----------+---------+-------------|
|          |         |             |

*** Faces

The following faces are defined:

| Face | Description |
|------+-------------|
|      |             |
|      |             |

** Key Bindings
:PROPERTIES:
:CUSTOM_ID: key-bindings
:END:

<whatever needs to be said about that>

| Key | Action | Description |
|-----+--------+-------------|
|     |        |             |

*** Hydra

<if there is any hydra>

** SQLite Database Schema
:PROPERTIES:
:CUSTOM_ID: sqlite-database-schema
:END:

This section describes the database tables. Check out [[file:sql/db-schema.sql][sql/db-schema.sql]] to see the actual schema used to create the database.

*** Links

The links table has to following columns:

- id: INTEGER (Primary key)
- heading_id: INTEGER (Foreign key referencing the 'headings' table)
- begin: INTEGER (Point of where the headings begins in the file)
  #+BEGIN_SRC org
    399
  #+END_SRC
- type: TEXT (Type of link (e.g., file, https, etc.))
  @@html:<details>@@
  @@html:<summary>@@
  Examples:
  @@html:</summary>@@
  #+BEGIN_SRC org
    - [[https://www.example.com][Example]] > https
    - https://www.example.com > https
    - [[file:../example.org]]  > file
    - [[../test.org]]  > file
  #+END_SRC
  @@html:</details>@@
- path: TEXT (Path. Can be a relative one for files.)
  #+BEGIN_SRC org
    - [[https://www.example.com][Example]] > //www.example.com
    - [[../example.org]]  > ../example.org
    - REMOVE [[https://www.example.com][Example]] > //www.example.com very long line to see what happens if this is printed on github.
  #+END_SRC
- path_absolute: TEXT (Absolute path if it is of type file.)
  #+BEGIN_SRC org
    - Example: [[../example.org]]  > ~/example/example.org
  #+END_SRC
- description: TEXT (Optional description of the link.)
  #+BEGIN_SRC org
    - Example: [[https://www.example.com][Example]] > Example
  #+END_SRC
- format: TEXT (Format of the link (plain or bracket).)
  #+BEGIN_SRC org
    - [[https://www.example.com][Example]] > bracket
    - https://www.example.com > plain
  #+END_SRC
- raw_link: TEXT (The raw link without the description.)
  #+BEGIN_SRC org
  #+END_SRC
- search_option: TEXT (The [[info:org#Search Options][Search Options]])
  #+BEGIN_SRC org
    - [[file:~/example/example.org::255]] > 255
  #+END_SRC

** Changelog
:PROPERTIES:
:CUSTOM_ID: changelog
:END:

See the [[./CHANGELOG.org][changelog]].

** Contributing
:PROPERTIES:
:CUSTOM_ID: contributing
:END:

Use the issue tracker to reports bugs, suggest improvements or propose new
features. If you want to contribute please open a pull request after having
opened a new issue.

In any case please check out the [[./CONTRIBUTING.org][contributing guidelines]] beforehand.
