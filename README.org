#+STARTUP: showall

* Org-files-db                                                   :noexport_2:

[[https://www.gnu.org/licenses/gpl-3.0][https://img.shields.io/badge/License-GPL%20v3-blue.svg]]

The org-files-db package allows you to store and manage data from Org files (headings, tags, properties, links) in a SQLite database. It supports the extraction of relevant information from specified directories or individual Org files.

The primary goal of org-files-db is to make it easy to interact with large collections of Org files by leveraging the power of a relational database. With the data stored in SQLite, you can perform complex queries, filter information, and integrate seamlessly with other tools and workflows.

Parsing Org files and inserting data into the database is done asynchronously, ensuring a non-blocking and responsive experience.

It detect changes in files periodically and updates the database automatically to keep your data synchronized. Changes made to Org files with Emacs are updated instantly.

-----

** Contents

- [[#installation][Installation]]
- [[#usage][Usage]]
- [[#customization][Customization]]
- [[#key-bindings][Key Bindings]]
- [[#changelog][Changelog]]
- [[#contributing][Contributing]]

** Installation
:PROPERTIES:
:CUSTOM_ID: installation
:END:

- [ ] Add the new command ~package-vc-install~ from Emacs 29

The packages is available on Github. Packages from Github can be installed with
for instance [[https://github.com/quelpa/quelpa][Quelpa]] or [[https://github.com/raxod502/straight.el][Straight]]. In addition you can use [[https://github.com/jwiegley/use-package][Use-Package]] or [[https://github.com/conao3/leaf.el][Leaf]] to
simplify your init file:

@@html:<details>@@
@@html:<summary>@@
*With Straight*
@@html:</summary>@@

- Straight
  #+BEGIN_SRC emacs-lisp
  (straight-use-package '(org-files-db :type git :host github :repo "hubisan/org-files-db"))
  #+END_SRC

- Use-package & Straight
  #+BEGIN_SRC emacs-lisp
    (use-package org-files-db
      :straight (org-files-db :type git :host github :repo "hubisan/org-files-db"))
  #+END_SRC

- Leaf & Straight
  #+BEGIN_SRC emacs-lisp
  (leaf org-files-db
      :straight (org-files-db :type git :host github :repo "hubisan/org-files-db"))
  #+END_SRC
  
@@html:</details>@@

@@html:<details>@@
@@html:<summary>@@
*With Quelpa*
@@html:</summary>@@

- Quelpa
  #+BEGIN_SRC emacs-lisp
    (quelpa '(org-files-db :repo "hubisan/org-files-db" :fetcher github))
  #+END_SRC

- Use-package & Quelpa
  #+BEGIN_SRC emacs-lisp
    (use-package org-files-db
      :quelpa (org-files-db :repo "hubisan/org-files-db" :fetcher github))
  #+END_SRC
@@html:</details>@@

*** Dependencies

Org-files-db depends on [[https://github.com/Genivia/ugrep][ugrep]] to parse the files, [[https://www.sqlite.org/index.html][SQLite]] (with JSON1 Extension
enabled) for the database and [[https://github.com/sharkdp/fd][fd]] is used to check for modified files. You have
to install those three dependencies.

@@html:<details>@@
@@html:<summary>@@
*Install SQLite with JSON1 Extension*
@@html:</summary>@@

SQLite needs [[https://www.sqlite.org/json1.html][JSON1 Extension]] to be enabled to be able to output queries as JSON
and parse it into a Lisp object. Use ~SELECT
sqlite_compileoption_used('ENABLE_JSON1');~ inside the sqlite shell to see if
the extension is loaded.

The latest SQLite precompiled binary has it enabled by default. Install it as
follows (Linux). Make sure to remove the already installed sqlite first:

#+BEGIN_SRC shell
  sudo apt update
  # Remove existings sqlite3
  sudo apt remove sqlite3
  # Dependencies
  sudo apt install -y wget unzip
  # Download the files
  wget https://www.sqlite.org/2022/sqlite-tools-linux-x86-3370200.zip --output-document=$HOME/sqlite-download.zip
  # Unzip to /bin
  sudo unzip -j $HOME/sqlite-download.zip -d /bin
  rm $HOME/sqlite-download.zip
#+END_SRC

Or compile it from source:

#+BEGIN_SRC bash
  sudo apt update
  # Remove existing sqlite
  sudo apt remove sqlite3
  # Dependencies
  sudo apt install -y wget unzip
  # Dowload it, the auto configure version.
  wget https://www.sqlite.org/2022/sqlite-autoconf-3370200.tar.gz
  # Extract it and cd into it.
  tar xf sqlite-autoconf-3370200.tar.gz
  cd sqlite-autoconf-3370200
  # Configure the software
  ./configure
  # Build the software
  make
  # Install it
  sudo make install
#+END_SRC
  
@@html:</details>@@

** Usage
:PROPERTIES:
:CUSTOM_ID: usage
:END:

<Usage description>

** Customization
:PROPERTIES:
:CUSTOM_ID: customization
:END:

*** Variables

Set the following variables to change the behaviour of the package:

| Variable | Default | Description |
|----------+---------+-------------|
|          |         |             |

*** Faces

The following faces are defined:

| Face | Description |
|------+-------------|
|      |             |
|      |             |

** Key Bindings
:PROPERTIES:
:CUSTOM_ID: key-bindings
:END:

<whatever needs to be said about that>

| Key | Action | Description |
|-----+--------+-------------|
|     |        |             |

*** Hydra

<if there is any hydra>

** Changelog
:PROPERTIES:
:CUSTOM_ID: changelog
:END:

See the [[./CHANGELOG.org][changelog]].

** Contributing
:PROPERTIES:
:CUSTOM_ID: contributing
:END:

Use the issue tracker to reports bugs, suggest improvements or propose new
features. If you want to contribute please open a pull request after having
opened a new issue.

In any case please check out the [[./CONTRIBUTING.org][contributing guidelines]] beforehand.
